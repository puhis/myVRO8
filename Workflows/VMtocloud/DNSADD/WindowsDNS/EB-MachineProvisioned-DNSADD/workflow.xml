<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item1" object-name="workflow:name=generic" id="9132d70a-445f-41d4-9927-5355aae332d5" version="0.0.9" api-version="6.0.0" allowed-operations="evf" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[EB-MachineProvisioned-DNSADD]]></display-name>
  <description><![CDATA[Be sure to update the attributes for WIndows User and Password and select the Windows Machine. For detailed guide visit www.vmtocloud.com @vmtocloud]]></description>
  <position y="50.0" x="100.0"/>
  <input>
    <param name="payload" type="Properties"/>
  </input>
  <output>
    <param name="scriptOutputText" type="string">
      <description><![CDATA[Output of the script]]></description>
    </param>
    <param name="scriptExitCode" type="number">
      <description><![CDATA[Exit code of the script]]></description>
    </param>
  </output>
  <attrib name="WindowsServerPassword" type="SecureString" read-only="false">
    <value encoded="n"><![CDATA[8BQ56M4DM77G61Y72H65G31M21X49968B6G79E035BREB8D1A1UEC7A2D8Y124F097VA5B4B7DXA02742DV9440435LE7FAAB7W9DE4A34HDD0E12BS1C7E71CJ424640BR1562B8S6D7BE8FP138A6A9R3CD5858U5F8E2CI3AB55E1Q9A8049I30EA3FCWB56D6A5NE9B5A87UA8AB73BH]]></value>
    <description><![CDATA[The password to login to Windows Server]]></description>
  </attrib>
  <attrib name="WindowsVM" type="VC:VirtualMachine" read-only="false">
    <value encoded="n"><![CDATA[__NULL__]]></value>
    <description><![CDATA[The Windows Server with DNSCMD installed]]></description>
  </attrib>
  <attrib name="WindowsServerUser" type="string" read-only="false">
    <value encoded="n"><![CDATA[administrator@corp.local]]></value>
    <description><![CDATA[Username to login to Windows Server]]></description>
  </attrib>
  <attrib name="pollingRate" type="number" read-only="false">
    <value encoded="n"><![CDATA[10.0]]></value>
    <description><![CDATA[Time between all request information on the tools [seconds]]]></description>
  </attrib>
  <attrib name="timeout" type="number" read-only="false">
    <value encoded="n"><![CDATA[5.0]]></value>
    <description><![CDATA[Timeout before throwing a timeout exception [minutes]]]></description>
  </attrib>
  <attrib name="address" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
    <description><![CDATA[This is a vRA custom property]]></description>
  </attrib>
  <attrib name="cmd" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
    <description><![CDATA[This will be generated from vRA properties]]></description>
  </attrib>
  <attrib name="vmname" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
    <description><![CDATA[This is a vRA custom property]]></description>
  </attrib>
  <attrib name="dnsdomain" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
    <description><![CDATA[This is a vRA custom property]]></description>
  </attrib>
  <attrib name="dnsserver" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
    <description><![CDATA[This is a vRA custom property]]></description>
  </attrib>
  <attrib name="scriptType" type="string" read-only="false">
    <value encoded="n"><![CDATA[bat]]></value>
    <description><![CDATA[bash / bat / powershell]]></description>
  </attrib>
  <attrib name="scriptRefreshTime" type="number" read-only="false">
    <value encoded="n"><![CDATA[5.0]]></value>
    <description><![CDATA[(default) Time (in seconds) where a check of script status occurs]]></description>
  </attrib>
  <attrib name="scriptWorkingDirectory" type="string" read-only="false">
    <value encoded="n"><![CDATA[C:\]]></value>
    <description><![CDATA[Script working directory in the guest]]></description>
  </attrib>
  <attrib name="interactiveSession" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
    <description><![CDATA[Script context interactivity]]></description>
  </attrib>
  <workflow-item  name="item0" type="end" end-mode="0">
    <position y="45.40909090909091" x="764.5"/>
  </workflow-item >
  <workflow-item  name="item1" out-name="item2" type="task">
    <display-name><![CDATA[Collect vRA Payload]]></display-name>
    <script encoded="false"><![CDATA[var executionContext = System.getContext();

System.log("BlueprintName: " + payload.get("blueprintName")) ;
System.log("ComponentId: " + payload.get("componentId")) ;
System.log("ComponentTypeId: " + payload.get("componentTypeId")) ;
System.log("EndpointId: " + payload.get("endpointId")) ;
System.log("RequestId: " + payload.get("requestId")) ;
System.log("VirtualMachineEvent: " + payload.get("virtualMachineEvent")) ;
System.log("WorkflowNextState: " + payload.get("workflowNextState")) ;

var lifecycleState = payload.get("lifecycleState") ;
System.log("State: " + lifecycleState.get("state")) ;
System.log("Phase: " + lifecycleState.get("phase")) ;
System.log("Event: " + lifecycleState.get("event")) ;

var machine = payload.get("machine") ;
System.log("ID: " + machine.get("id")) ;
System.log("Name: " + machine.get("name")) ;
System.log("ExternalReference: " + machine.get("externalReference")) ;
System.log("Owner: " + machine.get("owner")) ;
System.log("Type: " + machine.get("type")) ;
System.log("Properties: " + machine.get("properties")) ;

var vCACVmProperties = machine.get("properties") ;
if (vCACVmProperties != null) {
	var log = "";
	log += "vCAC VM properties :\n";
	var array = new Array();
	for each (var key in vCACVmProperties.keys) {
		array.push(key + " : " + vCACVmProperties.get(key));	
	}
	array.sort();
	
	for each (var line in array) {
		log += "\t" + line + "\n";
	}	
	System.log(log);	
}

//Custom intelligence for setting root and admin passwords
System.log('Getting the custom properties needed') ;
var vmname = machine.get("name") ;
var address = vCACVmProperties.get("VirtualMachine.Network0.Address") ;
var playbook = vCACVmProperties.get("Playbooks_EL7") ;
var dnsdomain = vCACVmProperties.get("VirtualMachine.Network0.DnsSuffix") ;
var dnsserver = vCACVmProperties.get("dnsserver") ;


]]></script>
    <in-binding>
      <bind name="payload" type="Properties" export-name="payload"/>
    </in-binding>
    <out-binding>
      <bind name="address" type="string" export-name="address"/>
      <bind name="vmname" type="string" export-name="vmname"/>
      <bind name="dnsdomain" type="string" export-name="dnsdomain"/>
      <bind name="dnsserver" type="string" export-name="dnsserver"/>
    </out-binding>
    <position y="55.40909090909091" x="204.5"/>
  </workflow-item >
  <workflow-item  name="item3" out-name="item4" type="task" script-module="com.vmware.library.vc.vm.tools/vim3WaitToolsStarted">
    <display-name><![CDATA[vim3WaitToolsStarted]]></display-name>
    <script encoded="false"><![CDATA[//Auto generated script, cannot be modified !
System.getModule("com.vmware.library.vc.vm.tools").vim3WaitToolsStarted(vm,pollingRate,timeout) ;]]></script>
    <in-binding>
      <bind name="vm" type="VC:VirtualMachine" export-name="WindowsVM">
        <description><![CDATA[VM in which the action look to get the new DNS Name]]></description>
      </bind>
      <bind name="pollingRate" type="number" export-name="pollingRate">
        <description><![CDATA[Time between all request information on the tools [seconds]]]></description>
      </bind>
      <bind name="timeout" type="number" export-name="timeout">
        <description><![CDATA[Timeout before throwing a timeout exception [minutes]]]></description>
      </bind>
    </in-binding>
    <out-binding/>
    <description><![CDATA[Wait for the VMware tools to be up and the guest running

Exception:
- Timeout: When timeout is reached
- ReferenceError: When vm is not set correctly]]></description>
    <position y="55.40909090909091" x="464.5"/>
  </workflow-item >
  <workflow-item  name="item2" out-name="item3" type="task">
    <display-name><![CDATA[MakeDNSCMD]]></display-name>
    <script encoded="false"><![CDATA[cmd = "dnscmd" + " " + dnsserver + " " + "/RecordAdd" + " " + dnsdomain + " " + vmname + " " + "/CreatePTR A" + " " + address;
]]></script>
    <in-binding>
      <bind name="address" type="string" export-name="address"/>
      <bind name="vmname" type="string" export-name="vmname"/>
      <bind name="dnsdomain" type="string" export-name="dnsdomain"/>
      <bind name="dnsserver" type="string" export-name="dnsserver"/>
    </in-binding>
    <out-binding>
      <bind name="cmd" type="string" export-name="cmd"/>
    </out-binding>
    <position y="55.40909090909091" x="344.5"/>
  </workflow-item >
  <workflow-item  name="item4" out-name="item0" type="link" linked-workflow-id="f8cd5692-92a0-46b6-a98d-53ffd878d779">
    <display-name><![CDATA[Run Script In Guest]]></display-name>
    <in-binding>
      <bind name="vm" type="VC:VirtualMachine" export-name="WindowsVM">
        <description><![CDATA[Virtual Machine (VC)]]></description>
      </bind>
      <bind name="username" type="string" export-name="WindowsServerUser">
        <description><![CDATA[Guest OS username]]></description>
      </bind>
      <bind name="password" type="SecureString" export-name="WindowsServerPassword">
        <description><![CDATA[Guest OS password]]></description>
      </bind>
      <bind name="scriptType" type="string" export-name="scriptType">
        <description><![CDATA[bash / bat / powershell]]></description>
      </bind>
      <bind name="script" type="string" export-name="cmd">
        <description><![CDATA[Script Text]]></description>
      </bind>
      <bind name="scriptTimeout" type="number" export-name="timeout">
        <description><![CDATA[Timeout for the running script (in second)]]></description>
      </bind>
      <bind name="scriptRefreshTime" type="number" export-name="scriptRefreshTime">
        <description><![CDATA[(default) Time (in seconds) where a check of script status occurs]]></description>
      </bind>
      <bind name="scriptWorkingDirectory" type="string" export-name="scriptWorkingDirectory">
        <description><![CDATA[Script working directory in the guest]]></description>
      </bind>
      <bind name="interactiveSession" type="boolean" export-name="interactiveSession">
        <description><![CDATA[Script context interactivity]]></description>
      </bind>
    </in-binding>
    <out-binding>
      <bind name="scriptOutputText" type="string" export-name="scriptOutputText">
        <description><![CDATA[Output of the script]]></description>
      </bind>
      <bind name="scriptExitCode" type="number" export-name="scriptExitCode">
        <description><![CDATA[Exit code of the script]]></description>
      </bind>
    </out-binding>
    <description><![CDATA[Run a script inside the VM and wait until it returns his result.
Retrieve the output of the script and returns it as output in the workflow

Inspired by implementation done in PowerCLI in the following .NET class :
- VMware.VimAutomation.ViCore.Impl.V1.RunScriptInGuestHelper
- VMware.VimAutomation.ViCore.Impl.V1.Service.VmGuestServiceImpl

Requires running VMwareTools instance in the GuestOS.
Leverages the vSphere 5.x GuestOperationsManager object and is not backwards compatible with previous versions of vSphere.]]></description>
    <position y="55.40909090909091" x="584.5"/>
  </workflow-item >
  <presentation>
    <p-param name="payload">
      <desc><![CDATA[payload]]></desc>
    </p-param>
  </presentation>
</workflow>